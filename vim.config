" *************************************************************************************
" to see all options:
"       :set all
"
" help about a setting / option
"       :help name_of_option
"
" info about vimrc file
"       :help vimrc
"
" para mais documentacao:
"       man vim
"       :help ...
"       http://newbiedoc.sourceforge.net/tutorials/vim/personal-vim.html
"
" *************************************************************************************
" syntax highligth: enables Vim to show parts of the text in another font or color.
" syntax on       " syntax off	" vim overrules your settings with the defaults
" syntax enable " syntax disable
syntax on

" enable using mouse
set mouse=a

" copy indent from current line when starting a new line
" 'autoindent' 'ai' 'noautoindent' 'noai'; boolean (default off)
set autoindent

" tab are ts characters wide
" 'tabstop' 'ts'
set ts=3

" indentation size is sw characters
" 'shiftwidth' 'sw'
" set sw=3

" ignore case in search patterns.
" 'ignorecase' 'ic' 'noignorecase' 'noic'; boolean (default off)
set ignorecase " case sensivity

" override the 'ignorecase' option if the search pattern contains upper case characters.
" 'smartcase' 'scs' 'nosmartcase' 'noscs'; boolean (default off)
set smartcase   " smart search

" while typing a search command, show where the pattern, as it was typed so far, matches.
" 'incsearch' 'is' 'noincsearch' 'nois'; boolean (default off)
set incsearch

" searches wrap around the end of the file.
" 'wrapscan' 'ws' 'nowrapscan' 'nows'; boolean (default on)
set wrapscan

" when there is a previous search pattern, highlight all its matches.
" 'hlsearch' 'hls' 'nohlsearch' 'nohls'; boolean (default off)
set hlsearch

" precede each line with its line number.
" 'nu' 'number' 'nonu' 'nonumber'
"set number
" show the relative line number for each line
" (local to window)
" 'rnu' 'relativenumber' 'nornu' 'norelativenumber'
set relativenumber

" display unprintable characters
" 'list' 'nolist'
set nolist

" show cursor position
set ruler

" display -- INSERT -- or -- REPLACE -- in status line 
set showmode

" highlight the current line
" 'cursorline' 'cl' 'nocursorline' 'nocl' ; boolean default off
set cursorline

" ring the bell (beep or screen flash) por error messages
" 'errorbells' 'eb' 'noerrorbells' 'noeb'; boolean default off
" noeb

" use visual bell instead of beeping
" 'visualbell' 'vb' 'novisualbell' 'novb' 'beep'
" vb

" *************************************************************************************
" teclado numerico e teclas auxiliares
" set <PageUp>=et <PageDown>=et <Insert>=et <Delete>=et <Home>=et <End>=et <k1>=ñ
" set <k2>=ò
" set <k3>=ó
" set <k4>=ô
" set <k5>=õ
" set <k6>=ö
" set <k7>=÷
" set <k8>=ø
" set <k9>=ù
" set <k0>=ð
" set <kPlus>=ì
" set <t_k8>=Ð
" set <kMinus>=í
" set <t_k4>=Ð
" set <kMultiply>=Ò
" set <t_k3>=Ð
" set <kDivide>=Ñ
" set <t_k2>=Ð
" set <kEnter>=Í
" set <kPoint>=î

" *************************************************************************************
" :abbreviate
" :ab SFER # TODO:      #
"
" ab and AND
" ab arr_curr ARR_CURR
" ab asc ASC
" ab attribute ATTRIBUTE
" ab between BETWEEN
" ab by BY
" ab case CASE
" ab char CHAR
" ab clipped CLIPPED
" ab count COUNT
" ab create CREATE
" ab database DATABASE
" ab date DATE
" ab datetime DATETIME
" ab define DEFINE
" ab delete DELETE
" ab desc DESC
" ab dirty DIRTY
" ab display DISPLAY
" ab drop DROP
" ab each EACH
" ab end END
" ab execute EXECUTE
" ab false FALSE
" ab fgl_getenv FGL_GETENV
" ab fgl_keyval FGL_KEYVAL
" ab fgl_lastkey FGL_LASTKEY
" ab field_touched FIELD_TOUCHED
" ab for FOR
" ab foreach FOREACH
" ab from FROM
" ab function FUNCTION
" ab group GROUP
" ab having HAVING
" ab infield INFIELD
" ab insert INSERT
" ab integer INTEGER
" ab into INTO
" ab isolation ISOLATION
" ab length LENGTH
" ab let LET
" ab like LIKE
" ab load LOAD
" ab main MAIN
" ab not NOT
" ab null NULL
" ab on ON
" ab order ORDER
" ab procedure PROCEDURE
" ab prompt PROMPT
" ab record RECORD
" ab referencing REFERENCING
" ab return RETURN
" ab returning RETURNING
" ab row ROW
" ab run RUN
" ab scr_line SCR_LINE
" ab second SECOND
" ab select SELECT
" ab set_count SET_COUNT
" ab smallint SMALLINT
" ab table TABLE
" ab temp TEMP
" ab then THEN
" ab trigger TRIGGER
" ab true TRUE
" ab unload UNLOAD
" ab update UPDATE
" ab using USING
" ab values VALUES
" ab varchar VARCHAR
" ab when WHEN
" ab where WHERE
" ab while WHILE
" ab year YEAR
" ab if IF
" ab call CALL
" ab declare DECLARE
" ab prepare PREPARE
" ab close CLOSE
" ab open OPEN
" ab else ELSE
" ab continue CONTINUE
" ab sqlca SQLCA
" ab sqlcode SQLCODE
" ab current CURRENT
" ab initialize INITIALIZE
" ab otherwise OTHERWISE
" ab decimal DECIMAL
" ab with WITH
" ab sum SUM
" ab day DAY
" ab units UNITS
" ab alter ALTER
" ab add ADD
" ab today TODAY  
